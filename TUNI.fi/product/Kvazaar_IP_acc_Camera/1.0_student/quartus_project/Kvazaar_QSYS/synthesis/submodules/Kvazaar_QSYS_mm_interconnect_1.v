// Kvazaar_QSYS_mm_interconnect_1.v

// This file was auto-generated from altera_mm_interconnect_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 16.0 211

`timescale 1 ps / 1 ps
module Kvazaar_QSYS_mm_interconnect_1 (
		input  wire [6:0]  axi_dma_orig_block_altera_axi_master_awid,                          //                         axi_dma_orig_block_altera_axi_master.awid
		input  wire [31:0] axi_dma_orig_block_altera_axi_master_awaddr,                        //                                                             .awaddr
		input  wire [3:0]  axi_dma_orig_block_altera_axi_master_awlen,                         //                                                             .awlen
		input  wire [2:0]  axi_dma_orig_block_altera_axi_master_awsize,                        //                                                             .awsize
		input  wire [1:0]  axi_dma_orig_block_altera_axi_master_awburst,                       //                                                             .awburst
		input  wire [1:0]  axi_dma_orig_block_altera_axi_master_awlock,                        //                                                             .awlock
		input  wire [3:0]  axi_dma_orig_block_altera_axi_master_awcache,                       //                                                             .awcache
		input  wire [2:0]  axi_dma_orig_block_altera_axi_master_awprot,                        //                                                             .awprot
		input  wire        axi_dma_orig_block_altera_axi_master_awvalid,                       //                                                             .awvalid
		output wire        axi_dma_orig_block_altera_axi_master_awready,                       //                                                             .awready
		input  wire [6:0]  axi_dma_orig_block_altera_axi_master_wid,                           //                                                             .wid
		input  wire [63:0] axi_dma_orig_block_altera_axi_master_wdata,                         //                                                             .wdata
		input  wire [7:0]  axi_dma_orig_block_altera_axi_master_wstrb,                         //                                                             .wstrb
		input  wire        axi_dma_orig_block_altera_axi_master_wlast,                         //                                                             .wlast
		input  wire        axi_dma_orig_block_altera_axi_master_wvalid,                        //                                                             .wvalid
		output wire        axi_dma_orig_block_altera_axi_master_wready,                        //                                                             .wready
		output wire [6:0]  axi_dma_orig_block_altera_axi_master_bid,                           //                                                             .bid
		output wire [1:0]  axi_dma_orig_block_altera_axi_master_bresp,                         //                                                             .bresp
		output wire        axi_dma_orig_block_altera_axi_master_bvalid,                        //                                                             .bvalid
		input  wire        axi_dma_orig_block_altera_axi_master_bready,                        //                                                             .bready
		input  wire [6:0]  axi_dma_orig_block_altera_axi_master_arid,                          //                                                             .arid
		input  wire [31:0] axi_dma_orig_block_altera_axi_master_araddr,                        //                                                             .araddr
		input  wire [3:0]  axi_dma_orig_block_altera_axi_master_arlen,                         //                                                             .arlen
		input  wire [2:0]  axi_dma_orig_block_altera_axi_master_arsize,                        //                                                             .arsize
		input  wire [1:0]  axi_dma_orig_block_altera_axi_master_arburst,                       //                                                             .arburst
		input  wire [1:0]  axi_dma_orig_block_altera_axi_master_arlock,                        //                                                             .arlock
		input  wire [3:0]  axi_dma_orig_block_altera_axi_master_arcache,                       //                                                             .arcache
		input  wire [2:0]  axi_dma_orig_block_altera_axi_master_arprot,                        //                                                             .arprot
		input  wire        axi_dma_orig_block_altera_axi_master_arvalid,                       //                                                             .arvalid
		output wire        axi_dma_orig_block_altera_axi_master_arready,                       //                                                             .arready
		output wire [6:0]  axi_dma_orig_block_altera_axi_master_rid,                           //                                                             .rid
		output wire [63:0] axi_dma_orig_block_altera_axi_master_rdata,                         //                                                             .rdata
		output wire [1:0]  axi_dma_orig_block_altera_axi_master_rresp,                         //                                                             .rresp
		output wire        axi_dma_orig_block_altera_axi_master_rlast,                         //                                                             .rlast
		output wire        axi_dma_orig_block_altera_axi_master_rvalid,                        //                                                             .rvalid
		input  wire        axi_dma_orig_block_altera_axi_master_rready,                        //                                                             .rready
		input  wire [6:0]  axi_dma_unfiltered2_altera_axi_master_awid,                         //                        axi_dma_unfiltered2_altera_axi_master.awid
		input  wire [31:0] axi_dma_unfiltered2_altera_axi_master_awaddr,                       //                                                             .awaddr
		input  wire [3:0]  axi_dma_unfiltered2_altera_axi_master_awlen,                        //                                                             .awlen
		input  wire [2:0]  axi_dma_unfiltered2_altera_axi_master_awsize,                       //                                                             .awsize
		input  wire [1:0]  axi_dma_unfiltered2_altera_axi_master_awburst,                      //                                                             .awburst
		input  wire [1:0]  axi_dma_unfiltered2_altera_axi_master_awlock,                       //                                                             .awlock
		input  wire [3:0]  axi_dma_unfiltered2_altera_axi_master_awcache,                      //                                                             .awcache
		input  wire [2:0]  axi_dma_unfiltered2_altera_axi_master_awprot,                       //                                                             .awprot
		input  wire        axi_dma_unfiltered2_altera_axi_master_awvalid,                      //                                                             .awvalid
		output wire        axi_dma_unfiltered2_altera_axi_master_awready,                      //                                                             .awready
		input  wire [6:0]  axi_dma_unfiltered2_altera_axi_master_wid,                          //                                                             .wid
		input  wire [63:0] axi_dma_unfiltered2_altera_axi_master_wdata,                        //                                                             .wdata
		input  wire [7:0]  axi_dma_unfiltered2_altera_axi_master_wstrb,                        //                                                             .wstrb
		input  wire        axi_dma_unfiltered2_altera_axi_master_wlast,                        //                                                             .wlast
		input  wire        axi_dma_unfiltered2_altera_axi_master_wvalid,                       //                                                             .wvalid
		output wire        axi_dma_unfiltered2_altera_axi_master_wready,                       //                                                             .wready
		output wire [6:0]  axi_dma_unfiltered2_altera_axi_master_bid,                          //                                                             .bid
		output wire [1:0]  axi_dma_unfiltered2_altera_axi_master_bresp,                        //                                                             .bresp
		output wire        axi_dma_unfiltered2_altera_axi_master_bvalid,                       //                                                             .bvalid
		input  wire        axi_dma_unfiltered2_altera_axi_master_bready,                       //                                                             .bready
		input  wire [6:0]  axi_dma_unfiltered2_altera_axi_master_arid,                         //                                                             .arid
		input  wire [31:0] axi_dma_unfiltered2_altera_axi_master_araddr,                       //                                                             .araddr
		input  wire [3:0]  axi_dma_unfiltered2_altera_axi_master_arlen,                        //                                                             .arlen
		input  wire [2:0]  axi_dma_unfiltered2_altera_axi_master_arsize,                       //                                                             .arsize
		input  wire [1:0]  axi_dma_unfiltered2_altera_axi_master_arburst,                      //                                                             .arburst
		input  wire [1:0]  axi_dma_unfiltered2_altera_axi_master_arlock,                       //                                                             .arlock
		input  wire [3:0]  axi_dma_unfiltered2_altera_axi_master_arcache,                      //                                                             .arcache
		input  wire [2:0]  axi_dma_unfiltered2_altera_axi_master_arprot,                       //                                                             .arprot
		input  wire        axi_dma_unfiltered2_altera_axi_master_arvalid,                      //                                                             .arvalid
		output wire        axi_dma_unfiltered2_altera_axi_master_arready,                      //                                                             .arready
		output wire [6:0]  axi_dma_unfiltered2_altera_axi_master_rid,                          //                                                             .rid
		output wire [63:0] axi_dma_unfiltered2_altera_axi_master_rdata,                        //                                                             .rdata
		output wire [1:0]  axi_dma_unfiltered2_altera_axi_master_rresp,                        //                                                             .rresp
		output wire        axi_dma_unfiltered2_altera_axi_master_rlast,                        //                                                             .rlast
		output wire        axi_dma_unfiltered2_altera_axi_master_rvalid,                       //                                                             .rvalid
		input  wire        axi_dma_unfiltered2_altera_axi_master_rready,                       //                                                             .rready
		output wire [7:0]  hps_0_f2h_sdram1_data_awid,                                         //                                        hps_0_f2h_sdram1_data.awid
		output wire [31:0] hps_0_f2h_sdram1_data_awaddr,                                       //                                                             .awaddr
		output wire [3:0]  hps_0_f2h_sdram1_data_awlen,                                        //                                                             .awlen
		output wire [2:0]  hps_0_f2h_sdram1_data_awsize,                                       //                                                             .awsize
		output wire [1:0]  hps_0_f2h_sdram1_data_awburst,                                      //                                                             .awburst
		output wire [1:0]  hps_0_f2h_sdram1_data_awlock,                                       //                                                             .awlock
		output wire [3:0]  hps_0_f2h_sdram1_data_awcache,                                      //                                                             .awcache
		output wire [2:0]  hps_0_f2h_sdram1_data_awprot,                                       //                                                             .awprot
		output wire        hps_0_f2h_sdram1_data_awvalid,                                      //                                                             .awvalid
		input  wire        hps_0_f2h_sdram1_data_awready,                                      //                                                             .awready
		output wire [7:0]  hps_0_f2h_sdram1_data_wid,                                          //                                                             .wid
		output wire [63:0] hps_0_f2h_sdram1_data_wdata,                                        //                                                             .wdata
		output wire [7:0]  hps_0_f2h_sdram1_data_wstrb,                                        //                                                             .wstrb
		output wire        hps_0_f2h_sdram1_data_wlast,                                        //                                                             .wlast
		output wire        hps_0_f2h_sdram1_data_wvalid,                                       //                                                             .wvalid
		input  wire        hps_0_f2h_sdram1_data_wready,                                       //                                                             .wready
		input  wire [7:0]  hps_0_f2h_sdram1_data_bid,                                          //                                                             .bid
		input  wire [1:0]  hps_0_f2h_sdram1_data_bresp,                                        //                                                             .bresp
		input  wire        hps_0_f2h_sdram1_data_bvalid,                                       //                                                             .bvalid
		output wire        hps_0_f2h_sdram1_data_bready,                                       //                                                             .bready
		output wire [7:0]  hps_0_f2h_sdram1_data_arid,                                         //                                                             .arid
		output wire [31:0] hps_0_f2h_sdram1_data_araddr,                                       //                                                             .araddr
		output wire [3:0]  hps_0_f2h_sdram1_data_arlen,                                        //                                                             .arlen
		output wire [2:0]  hps_0_f2h_sdram1_data_arsize,                                       //                                                             .arsize
		output wire [1:0]  hps_0_f2h_sdram1_data_arburst,                                      //                                                             .arburst
		output wire [1:0]  hps_0_f2h_sdram1_data_arlock,                                       //                                                             .arlock
		output wire [3:0]  hps_0_f2h_sdram1_data_arcache,                                      //                                                             .arcache
		output wire [2:0]  hps_0_f2h_sdram1_data_arprot,                                       //                                                             .arprot
		output wire        hps_0_f2h_sdram1_data_arvalid,                                      //                                                             .arvalid
		input  wire        hps_0_f2h_sdram1_data_arready,                                      //                                                             .arready
		input  wire [7:0]  hps_0_f2h_sdram1_data_rid,                                          //                                                             .rid
		input  wire [63:0] hps_0_f2h_sdram1_data_rdata,                                        //                                                             .rdata
		input  wire [1:0]  hps_0_f2h_sdram1_data_rresp,                                        //                                                             .rresp
		input  wire        hps_0_f2h_sdram1_data_rlast,                                        //                                                             .rlast
		input  wire        hps_0_f2h_sdram1_data_rvalid,                                       //                                                             .rvalid
		output wire        hps_0_f2h_sdram1_data_rready,                                       //                                                             .rready
		input  wire        clk_0_clk_clk,                                                      //                                                    clk_0_clk.clk
		input  wire        axi_dma_unfiltered2_reset_sink_reset_bridge_in_reset_reset,         //         axi_dma_unfiltered2_reset_sink_reset_bridge_in_reset.reset
		input  wire        hps_0_f2h_sdram1_data_agent_reset_sink_reset_bridge_in_reset_reset  // hps_0_f2h_sdram1_data_agent_reset_sink_reset_bridge_in_reset.reset
	);

	wire          rsp_mux_src_valid;                                                  // rsp_mux:src_valid -> axi_dma_unfiltered2_altera_axi_master_agent:write_rp_valid
	wire  [155:0] rsp_mux_src_data;                                                   // rsp_mux:src_data -> axi_dma_unfiltered2_altera_axi_master_agent:write_rp_data
	wire          rsp_mux_src_ready;                                                  // axi_dma_unfiltered2_altera_axi_master_agent:write_rp_ready -> rsp_mux:src_ready
	wire    [3:0] rsp_mux_src_channel;                                                // rsp_mux:src_channel -> axi_dma_unfiltered2_altera_axi_master_agent:write_rp_channel
	wire          rsp_mux_src_startofpacket;                                          // rsp_mux:src_startofpacket -> axi_dma_unfiltered2_altera_axi_master_agent:write_rp_startofpacket
	wire          rsp_mux_src_endofpacket;                                            // rsp_mux:src_endofpacket -> axi_dma_unfiltered2_altera_axi_master_agent:write_rp_endofpacket
	wire          rsp_mux_001_src_valid;                                              // rsp_mux_001:src_valid -> axi_dma_unfiltered2_altera_axi_master_agent:read_rp_valid
	wire  [155:0] rsp_mux_001_src_data;                                               // rsp_mux_001:src_data -> axi_dma_unfiltered2_altera_axi_master_agent:read_rp_data
	wire          rsp_mux_001_src_ready;                                              // axi_dma_unfiltered2_altera_axi_master_agent:read_rp_ready -> rsp_mux_001:src_ready
	wire    [3:0] rsp_mux_001_src_channel;                                            // rsp_mux_001:src_channel -> axi_dma_unfiltered2_altera_axi_master_agent:read_rp_channel
	wire          rsp_mux_001_src_startofpacket;                                      // rsp_mux_001:src_startofpacket -> axi_dma_unfiltered2_altera_axi_master_agent:read_rp_startofpacket
	wire          rsp_mux_001_src_endofpacket;                                        // rsp_mux_001:src_endofpacket -> axi_dma_unfiltered2_altera_axi_master_agent:read_rp_endofpacket
	wire          rsp_mux_002_src_valid;                                              // rsp_mux_002:src_valid -> axi_dma_orig_block_altera_axi_master_agent:write_rp_valid
	wire  [155:0] rsp_mux_002_src_data;                                               // rsp_mux_002:src_data -> axi_dma_orig_block_altera_axi_master_agent:write_rp_data
	wire          rsp_mux_002_src_ready;                                              // axi_dma_orig_block_altera_axi_master_agent:write_rp_ready -> rsp_mux_002:src_ready
	wire    [3:0] rsp_mux_002_src_channel;                                            // rsp_mux_002:src_channel -> axi_dma_orig_block_altera_axi_master_agent:write_rp_channel
	wire          rsp_mux_002_src_startofpacket;                                      // rsp_mux_002:src_startofpacket -> axi_dma_orig_block_altera_axi_master_agent:write_rp_startofpacket
	wire          rsp_mux_002_src_endofpacket;                                        // rsp_mux_002:src_endofpacket -> axi_dma_orig_block_altera_axi_master_agent:write_rp_endofpacket
	wire          rsp_mux_003_src_valid;                                              // rsp_mux_003:src_valid -> axi_dma_orig_block_altera_axi_master_agent:read_rp_valid
	wire  [155:0] rsp_mux_003_src_data;                                               // rsp_mux_003:src_data -> axi_dma_orig_block_altera_axi_master_agent:read_rp_data
	wire          rsp_mux_003_src_ready;                                              // axi_dma_orig_block_altera_axi_master_agent:read_rp_ready -> rsp_mux_003:src_ready
	wire    [3:0] rsp_mux_003_src_channel;                                            // rsp_mux_003:src_channel -> axi_dma_orig_block_altera_axi_master_agent:read_rp_channel
	wire          rsp_mux_003_src_startofpacket;                                      // rsp_mux_003:src_startofpacket -> axi_dma_orig_block_altera_axi_master_agent:read_rp_startofpacket
	wire          rsp_mux_003_src_endofpacket;                                        // rsp_mux_003:src_endofpacket -> axi_dma_orig_block_altera_axi_master_agent:read_rp_endofpacket
	wire          cmd_mux_src_valid;                                                  // cmd_mux:src_valid -> hps_0_f2h_sdram1_data_agent:write_cp_valid
	wire  [155:0] cmd_mux_src_data;                                                   // cmd_mux:src_data -> hps_0_f2h_sdram1_data_agent:write_cp_data
	wire          cmd_mux_src_ready;                                                  // hps_0_f2h_sdram1_data_agent:write_cp_ready -> cmd_mux:src_ready
	wire    [3:0] cmd_mux_src_channel;                                                // cmd_mux:src_channel -> hps_0_f2h_sdram1_data_agent:write_cp_channel
	wire          cmd_mux_src_startofpacket;                                          // cmd_mux:src_startofpacket -> hps_0_f2h_sdram1_data_agent:write_cp_startofpacket
	wire          cmd_mux_src_endofpacket;                                            // cmd_mux:src_endofpacket -> hps_0_f2h_sdram1_data_agent:write_cp_endofpacket
	wire          cmd_mux_001_src_valid;                                              // cmd_mux_001:src_valid -> hps_0_f2h_sdram1_data_agent:read_cp_valid
	wire  [155:0] cmd_mux_001_src_data;                                               // cmd_mux_001:src_data -> hps_0_f2h_sdram1_data_agent:read_cp_data
	wire          cmd_mux_001_src_ready;                                              // hps_0_f2h_sdram1_data_agent:read_cp_ready -> cmd_mux_001:src_ready
	wire    [3:0] cmd_mux_001_src_channel;                                            // cmd_mux_001:src_channel -> hps_0_f2h_sdram1_data_agent:read_cp_channel
	wire          cmd_mux_001_src_startofpacket;                                      // cmd_mux_001:src_startofpacket -> hps_0_f2h_sdram1_data_agent:read_cp_startofpacket
	wire          cmd_mux_001_src_endofpacket;                                        // cmd_mux_001:src_endofpacket -> hps_0_f2h_sdram1_data_agent:read_cp_endofpacket
	wire          axi_dma_unfiltered2_altera_axi_master_agent_write_cp_valid;         // axi_dma_unfiltered2_altera_axi_master_agent:write_cp_valid -> router:sink_valid
	wire  [155:0] axi_dma_unfiltered2_altera_axi_master_agent_write_cp_data;          // axi_dma_unfiltered2_altera_axi_master_agent:write_cp_data -> router:sink_data
	wire          axi_dma_unfiltered2_altera_axi_master_agent_write_cp_ready;         // router:sink_ready -> axi_dma_unfiltered2_altera_axi_master_agent:write_cp_ready
	wire          axi_dma_unfiltered2_altera_axi_master_agent_write_cp_startofpacket; // axi_dma_unfiltered2_altera_axi_master_agent:write_cp_startofpacket -> router:sink_startofpacket
	wire          axi_dma_unfiltered2_altera_axi_master_agent_write_cp_endofpacket;   // axi_dma_unfiltered2_altera_axi_master_agent:write_cp_endofpacket -> router:sink_endofpacket
	wire          router_src_valid;                                                   // router:src_valid -> cmd_demux:sink_valid
	wire  [155:0] router_src_data;                                                    // router:src_data -> cmd_demux:sink_data
	wire          router_src_ready;                                                   // cmd_demux:sink_ready -> router:src_ready
	wire    [3:0] router_src_channel;                                                 // router:src_channel -> cmd_demux:sink_channel
	wire          router_src_startofpacket;                                           // router:src_startofpacket -> cmd_demux:sink_startofpacket
	wire          router_src_endofpacket;                                             // router:src_endofpacket -> cmd_demux:sink_endofpacket
	wire          axi_dma_unfiltered2_altera_axi_master_agent_read_cp_valid;          // axi_dma_unfiltered2_altera_axi_master_agent:read_cp_valid -> router_001:sink_valid
	wire  [155:0] axi_dma_unfiltered2_altera_axi_master_agent_read_cp_data;           // axi_dma_unfiltered2_altera_axi_master_agent:read_cp_data -> router_001:sink_data
	wire          axi_dma_unfiltered2_altera_axi_master_agent_read_cp_ready;          // router_001:sink_ready -> axi_dma_unfiltered2_altera_axi_master_agent:read_cp_ready
	wire          axi_dma_unfiltered2_altera_axi_master_agent_read_cp_startofpacket;  // axi_dma_unfiltered2_altera_axi_master_agent:read_cp_startofpacket -> router_001:sink_startofpacket
	wire          axi_dma_unfiltered2_altera_axi_master_agent_read_cp_endofpacket;    // axi_dma_unfiltered2_altera_axi_master_agent:read_cp_endofpacket -> router_001:sink_endofpacket
	wire          router_001_src_valid;                                               // router_001:src_valid -> cmd_demux_001:sink_valid
	wire  [155:0] router_001_src_data;                                                // router_001:src_data -> cmd_demux_001:sink_data
	wire          router_001_src_ready;                                               // cmd_demux_001:sink_ready -> router_001:src_ready
	wire    [3:0] router_001_src_channel;                                             // router_001:src_channel -> cmd_demux_001:sink_channel
	wire          router_001_src_startofpacket;                                       // router_001:src_startofpacket -> cmd_demux_001:sink_startofpacket
	wire          router_001_src_endofpacket;                                         // router_001:src_endofpacket -> cmd_demux_001:sink_endofpacket
	wire          axi_dma_orig_block_altera_axi_master_agent_write_cp_valid;          // axi_dma_orig_block_altera_axi_master_agent:write_cp_valid -> router_002:sink_valid
	wire  [155:0] axi_dma_orig_block_altera_axi_master_agent_write_cp_data;           // axi_dma_orig_block_altera_axi_master_agent:write_cp_data -> router_002:sink_data
	wire          axi_dma_orig_block_altera_axi_master_agent_write_cp_ready;          // router_002:sink_ready -> axi_dma_orig_block_altera_axi_master_agent:write_cp_ready
	wire          axi_dma_orig_block_altera_axi_master_agent_write_cp_startofpacket;  // axi_dma_orig_block_altera_axi_master_agent:write_cp_startofpacket -> router_002:sink_startofpacket
	wire          axi_dma_orig_block_altera_axi_master_agent_write_cp_endofpacket;    // axi_dma_orig_block_altera_axi_master_agent:write_cp_endofpacket -> router_002:sink_endofpacket
	wire          router_002_src_valid;                                               // router_002:src_valid -> cmd_demux_002:sink_valid
	wire  [155:0] router_002_src_data;                                                // router_002:src_data -> cmd_demux_002:sink_data
	wire          router_002_src_ready;                                               // cmd_demux_002:sink_ready -> router_002:src_ready
	wire    [3:0] router_002_src_channel;                                             // router_002:src_channel -> cmd_demux_002:sink_channel
	wire          router_002_src_startofpacket;                                       // router_002:src_startofpacket -> cmd_demux_002:sink_startofpacket
	wire          router_002_src_endofpacket;                                         // router_002:src_endofpacket -> cmd_demux_002:sink_endofpacket
	wire          axi_dma_orig_block_altera_axi_master_agent_read_cp_valid;           // axi_dma_orig_block_altera_axi_master_agent:read_cp_valid -> router_003:sink_valid
	wire  [155:0] axi_dma_orig_block_altera_axi_master_agent_read_cp_data;            // axi_dma_orig_block_altera_axi_master_agent:read_cp_data -> router_003:sink_data
	wire          axi_dma_orig_block_altera_axi_master_agent_read_cp_ready;           // router_003:sink_ready -> axi_dma_orig_block_altera_axi_master_agent:read_cp_ready
	wire          axi_dma_orig_block_altera_axi_master_agent_read_cp_startofpacket;   // axi_dma_orig_block_altera_axi_master_agent:read_cp_startofpacket -> router_003:sink_startofpacket
	wire          axi_dma_orig_block_altera_axi_master_agent_read_cp_endofpacket;     // axi_dma_orig_block_altera_axi_master_agent:read_cp_endofpacket -> router_003:sink_endofpacket
	wire          router_003_src_valid;                                               // router_003:src_valid -> cmd_demux_003:sink_valid
	wire  [155:0] router_003_src_data;                                                // router_003:src_data -> cmd_demux_003:sink_data
	wire          router_003_src_ready;                                               // cmd_demux_003:sink_ready -> router_003:src_ready
	wire    [3:0] router_003_src_channel;                                             // router_003:src_channel -> cmd_demux_003:sink_channel
	wire          router_003_src_startofpacket;                                       // router_003:src_startofpacket -> cmd_demux_003:sink_startofpacket
	wire          router_003_src_endofpacket;                                         // router_003:src_endofpacket -> cmd_demux_003:sink_endofpacket
	wire          hps_0_f2h_sdram1_data_agent_write_rp_valid;                         // hps_0_f2h_sdram1_data_agent:write_rp_valid -> router_004:sink_valid
	wire  [155:0] hps_0_f2h_sdram1_data_agent_write_rp_data;                          // hps_0_f2h_sdram1_data_agent:write_rp_data -> router_004:sink_data
	wire          hps_0_f2h_sdram1_data_agent_write_rp_ready;                         // router_004:sink_ready -> hps_0_f2h_sdram1_data_agent:write_rp_ready
	wire          hps_0_f2h_sdram1_data_agent_write_rp_startofpacket;                 // hps_0_f2h_sdram1_data_agent:write_rp_startofpacket -> router_004:sink_startofpacket
	wire          hps_0_f2h_sdram1_data_agent_write_rp_endofpacket;                   // hps_0_f2h_sdram1_data_agent:write_rp_endofpacket -> router_004:sink_endofpacket
	wire          router_004_src_valid;                                               // router_004:src_valid -> rsp_demux:sink_valid
	wire  [155:0] router_004_src_data;                                                // router_004:src_data -> rsp_demux:sink_data
	wire          router_004_src_ready;                                               // rsp_demux:sink_ready -> router_004:src_ready
	wire    [3:0] router_004_src_channel;                                             // router_004:src_channel -> rsp_demux:sink_channel
	wire          router_004_src_startofpacket;                                       // router_004:src_startofpacket -> rsp_demux:sink_startofpacket
	wire          router_004_src_endofpacket;                                         // router_004:src_endofpacket -> rsp_demux:sink_endofpacket
	wire          hps_0_f2h_sdram1_data_agent_read_rp_valid;                          // hps_0_f2h_sdram1_data_agent:read_rp_valid -> router_005:sink_valid
	wire  [155:0] hps_0_f2h_sdram1_data_agent_read_rp_data;                           // hps_0_f2h_sdram1_data_agent:read_rp_data -> router_005:sink_data
	wire          hps_0_f2h_sdram1_data_agent_read_rp_ready;                          // router_005:sink_ready -> hps_0_f2h_sdram1_data_agent:read_rp_ready
	wire          hps_0_f2h_sdram1_data_agent_read_rp_startofpacket;                  // hps_0_f2h_sdram1_data_agent:read_rp_startofpacket -> router_005:sink_startofpacket
	wire          hps_0_f2h_sdram1_data_agent_read_rp_endofpacket;                    // hps_0_f2h_sdram1_data_agent:read_rp_endofpacket -> router_005:sink_endofpacket
	wire          router_005_src_valid;                                               // router_005:src_valid -> rsp_demux_001:sink_valid
	wire  [155:0] router_005_src_data;                                                // router_005:src_data -> rsp_demux_001:sink_data
	wire          router_005_src_ready;                                               // rsp_demux_001:sink_ready -> router_005:src_ready
	wire    [3:0] router_005_src_channel;                                             // router_005:src_channel -> rsp_demux_001:sink_channel
	wire          router_005_src_startofpacket;                                       // router_005:src_startofpacket -> rsp_demux_001:sink_startofpacket
	wire          router_005_src_endofpacket;                                         // router_005:src_endofpacket -> rsp_demux_001:sink_endofpacket
	wire          cmd_demux_src0_valid;                                               // cmd_demux:src0_valid -> cmd_mux:sink0_valid
	wire  [155:0] cmd_demux_src0_data;                                                // cmd_demux:src0_data -> cmd_mux:sink0_data
	wire          cmd_demux_src0_ready;                                               // cmd_mux:sink0_ready -> cmd_demux:src0_ready
	wire    [3:0] cmd_demux_src0_channel;                                             // cmd_demux:src0_channel -> cmd_mux:sink0_channel
	wire          cmd_demux_src0_startofpacket;                                       // cmd_demux:src0_startofpacket -> cmd_mux:sink0_startofpacket
	wire          cmd_demux_src0_endofpacket;                                         // cmd_demux:src0_endofpacket -> cmd_mux:sink0_endofpacket
	wire          cmd_demux_001_src0_valid;                                           // cmd_demux_001:src0_valid -> cmd_mux_001:sink0_valid
	wire  [155:0] cmd_demux_001_src0_data;                                            // cmd_demux_001:src0_data -> cmd_mux_001:sink0_data
	wire          cmd_demux_001_src0_ready;                                           // cmd_mux_001:sink0_ready -> cmd_demux_001:src0_ready
	wire    [3:0] cmd_demux_001_src0_channel;                                         // cmd_demux_001:src0_channel -> cmd_mux_001:sink0_channel
	wire          cmd_demux_001_src0_startofpacket;                                   // cmd_demux_001:src0_startofpacket -> cmd_mux_001:sink0_startofpacket
	wire          cmd_demux_001_src0_endofpacket;                                     // cmd_demux_001:src0_endofpacket -> cmd_mux_001:sink0_endofpacket
	wire          cmd_demux_002_src0_valid;                                           // cmd_demux_002:src0_valid -> cmd_mux:sink1_valid
	wire  [155:0] cmd_demux_002_src0_data;                                            // cmd_demux_002:src0_data -> cmd_mux:sink1_data
	wire          cmd_demux_002_src0_ready;                                           // cmd_mux:sink1_ready -> cmd_demux_002:src0_ready
	wire    [3:0] cmd_demux_002_src0_channel;                                         // cmd_demux_002:src0_channel -> cmd_mux:sink1_channel
	wire          cmd_demux_002_src0_startofpacket;                                   // cmd_demux_002:src0_startofpacket -> cmd_mux:sink1_startofpacket
	wire          cmd_demux_002_src0_endofpacket;                                     // cmd_demux_002:src0_endofpacket -> cmd_mux:sink1_endofpacket
	wire          cmd_demux_003_src0_valid;                                           // cmd_demux_003:src0_valid -> cmd_mux_001:sink1_valid
	wire  [155:0] cmd_demux_003_src0_data;                                            // cmd_demux_003:src0_data -> cmd_mux_001:sink1_data
	wire          cmd_demux_003_src0_ready;                                           // cmd_mux_001:sink1_ready -> cmd_demux_003:src0_ready
	wire    [3:0] cmd_demux_003_src0_channel;                                         // cmd_demux_003:src0_channel -> cmd_mux_001:sink1_channel
	wire          cmd_demux_003_src0_startofpacket;                                   // cmd_demux_003:src0_startofpacket -> cmd_mux_001:sink1_startofpacket
	wire          cmd_demux_003_src0_endofpacket;                                     // cmd_demux_003:src0_endofpacket -> cmd_mux_001:sink1_endofpacket
	wire          rsp_demux_src0_valid;                                               // rsp_demux:src0_valid -> rsp_mux:sink0_valid
	wire  [155:0] rsp_demux_src0_data;                                                // rsp_demux:src0_data -> rsp_mux:sink0_data
	wire          rsp_demux_src0_ready;                                               // rsp_mux:sink0_ready -> rsp_demux:src0_ready
	wire    [3:0] rsp_demux_src0_channel;                                             // rsp_demux:src0_channel -> rsp_mux:sink0_channel
	wire          rsp_demux_src0_startofpacket;                                       // rsp_demux:src0_startofpacket -> rsp_mux:sink0_startofpacket
	wire          rsp_demux_src0_endofpacket;                                         // rsp_demux:src0_endofpacket -> rsp_mux:sink0_endofpacket
	wire          rsp_demux_src1_valid;                                               // rsp_demux:src1_valid -> rsp_mux_002:sink0_valid
	wire  [155:0] rsp_demux_src1_data;                                                // rsp_demux:src1_data -> rsp_mux_002:sink0_data
	wire          rsp_demux_src1_ready;                                               // rsp_mux_002:sink0_ready -> rsp_demux:src1_ready
	wire    [3:0] rsp_demux_src1_channel;                                             // rsp_demux:src1_channel -> rsp_mux_002:sink0_channel
	wire          rsp_demux_src1_startofpacket;                                       // rsp_demux:src1_startofpacket -> rsp_mux_002:sink0_startofpacket
	wire          rsp_demux_src1_endofpacket;                                         // rsp_demux:src1_endofpacket -> rsp_mux_002:sink0_endofpacket
	wire          rsp_demux_001_src0_valid;                                           // rsp_demux_001:src0_valid -> rsp_mux_001:sink0_valid
	wire  [155:0] rsp_demux_001_src0_data;                                            // rsp_demux_001:src0_data -> rsp_mux_001:sink0_data
	wire          rsp_demux_001_src0_ready;                                           // rsp_mux_001:sink0_ready -> rsp_demux_001:src0_ready
	wire    [3:0] rsp_demux_001_src0_channel;                                         // rsp_demux_001:src0_channel -> rsp_mux_001:sink0_channel
	wire          rsp_demux_001_src0_startofpacket;                                   // rsp_demux_001:src0_startofpacket -> rsp_mux_001:sink0_startofpacket
	wire          rsp_demux_001_src0_endofpacket;                                     // rsp_demux_001:src0_endofpacket -> rsp_mux_001:sink0_endofpacket
	wire          rsp_demux_001_src1_valid;                                           // rsp_demux_001:src1_valid -> rsp_mux_003:sink0_valid
	wire  [155:0] rsp_demux_001_src1_data;                                            // rsp_demux_001:src1_data -> rsp_mux_003:sink0_data
	wire          rsp_demux_001_src1_ready;                                           // rsp_mux_003:sink0_ready -> rsp_demux_001:src1_ready
	wire    [3:0] rsp_demux_001_src1_channel;                                         // rsp_demux_001:src1_channel -> rsp_mux_003:sink0_channel
	wire          rsp_demux_001_src1_startofpacket;                                   // rsp_demux_001:src1_startofpacket -> rsp_mux_003:sink0_startofpacket
	wire          rsp_demux_001_src1_endofpacket;                                     // rsp_demux_001:src1_endofpacket -> rsp_mux_003:sink0_endofpacket

	altera_merlin_axi_master_ni #(
		.ID_WIDTH                  (7),
		.ADDR_WIDTH                (32),
		.RDATA_WIDTH               (64),
		.WDATA_WIDTH               (64),
		.ADDR_USER_WIDTH           (1),
		.DATA_USER_WIDTH           (1),
		.AXI_BURST_LENGTH_WIDTH    (4),
		.AXI_LOCK_WIDTH            (2),
		.AXI_VERSION               ("AXI3"),
		.WRITE_ISSUING_CAPABILITY  (1),
		.READ_ISSUING_CAPABILITY   (1),
		.PKT_BEGIN_BURST           (133),
		.PKT_CACHE_H               (150),
		.PKT_CACHE_L               (147),
		.PKT_ADDR_SIDEBAND_H       (131),
		.PKT_ADDR_SIDEBAND_L       (131),
		.PKT_PROTECTION_H          (146),
		.PKT_PROTECTION_L          (144),
		.PKT_BURST_SIZE_H          (128),
		.PKT_BURST_SIZE_L          (126),
		.PKT_BURST_TYPE_H          (130),
		.PKT_BURST_TYPE_L          (129),
		.PKT_RESPONSE_STATUS_L     (151),
		.PKT_RESPONSE_STATUS_H     (152),
		.PKT_BURSTWRAP_H           (125),
		.PKT_BURSTWRAP_L           (118),
		.PKT_BYTE_CNT_H            (117),
		.PKT_BYTE_CNT_L            (110),
		.PKT_ADDR_H                (103),
		.PKT_ADDR_L                (72),
		.PKT_TRANS_EXCLUSIVE       (109),
		.PKT_TRANS_LOCK            (108),
		.PKT_TRANS_COMPRESSED_READ (104),
		.PKT_TRANS_POSTED          (105),
		.PKT_TRANS_WRITE           (106),
		.PKT_TRANS_READ            (107),
		.PKT_DATA_H                (63),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (71),
		.PKT_BYTEEN_L              (64),
		.PKT_SRC_ID_H              (135),
		.PKT_SRC_ID_L              (135),
		.PKT_DEST_ID_H             (136),
		.PKT_DEST_ID_L             (136),
		.PKT_THREAD_ID_H           (143),
		.PKT_THREAD_ID_L           (137),
		.PKT_QOS_L                 (134),
		.PKT_QOS_H                 (134),
		.PKT_ORI_BURST_SIZE_L      (153),
		.PKT_ORI_BURST_SIZE_H      (155),
		.PKT_DATA_SIDEBAND_H       (132),
		.PKT_DATA_SIDEBAND_L       (132),
		.ST_DATA_W                 (156),
		.ST_CHANNEL_W              (4),
		.ID                        (1)
	) axi_dma_unfiltered2_altera_axi_master_agent (
		.aclk                   (clk_0_clk_clk),                                                      //              clk.clk
		.aresetn                (~axi_dma_unfiltered2_reset_sink_reset_bridge_in_reset_reset),        //        clk_reset.reset_n
		.write_cp_valid         (axi_dma_unfiltered2_altera_axi_master_agent_write_cp_valid),         //         write_cp.valid
		.write_cp_data          (axi_dma_unfiltered2_altera_axi_master_agent_write_cp_data),          //                 .data
		.write_cp_startofpacket (axi_dma_unfiltered2_altera_axi_master_agent_write_cp_startofpacket), //                 .startofpacket
		.write_cp_endofpacket   (axi_dma_unfiltered2_altera_axi_master_agent_write_cp_endofpacket),   //                 .endofpacket
		.write_cp_ready         (axi_dma_unfiltered2_altera_axi_master_agent_write_cp_ready),         //                 .ready
		.write_rp_valid         (rsp_mux_src_valid),                                                  //         write_rp.valid
		.write_rp_data          (rsp_mux_src_data),                                                   //                 .data
		.write_rp_channel       (rsp_mux_src_channel),                                                //                 .channel
		.write_rp_startofpacket (rsp_mux_src_startofpacket),                                          //                 .startofpacket
		.write_rp_endofpacket   (rsp_mux_src_endofpacket),                                            //                 .endofpacket
		.write_rp_ready         (rsp_mux_src_ready),                                                  //                 .ready
		.read_cp_valid          (axi_dma_unfiltered2_altera_axi_master_agent_read_cp_valid),          //          read_cp.valid
		.read_cp_data           (axi_dma_unfiltered2_altera_axi_master_agent_read_cp_data),           //                 .data
		.read_cp_startofpacket  (axi_dma_unfiltered2_altera_axi_master_agent_read_cp_startofpacket),  //                 .startofpacket
		.read_cp_endofpacket    (axi_dma_unfiltered2_altera_axi_master_agent_read_cp_endofpacket),    //                 .endofpacket
		.read_cp_ready          (axi_dma_unfiltered2_altera_axi_master_agent_read_cp_ready),          //                 .ready
		.read_rp_valid          (rsp_mux_001_src_valid),                                              //          read_rp.valid
		.read_rp_data           (rsp_mux_001_src_data),                                               //                 .data
		.read_rp_channel        (rsp_mux_001_src_channel),                                            //                 .channel
		.read_rp_startofpacket  (rsp_mux_001_src_startofpacket),                                      //                 .startofpacket
		.read_rp_endofpacket    (rsp_mux_001_src_endofpacket),                                        //                 .endofpacket
		.read_rp_ready          (rsp_mux_001_src_ready),                                              //                 .ready
		.awid                   (axi_dma_unfiltered2_altera_axi_master_awid),                         // altera_axi_slave.awid
		.awaddr                 (axi_dma_unfiltered2_altera_axi_master_awaddr),                       //                 .awaddr
		.awlen                  (axi_dma_unfiltered2_altera_axi_master_awlen),                        //                 .awlen
		.awsize                 (axi_dma_unfiltered2_altera_axi_master_awsize),                       //                 .awsize
		.awburst                (axi_dma_unfiltered2_altera_axi_master_awburst),                      //                 .awburst
		.awlock                 (axi_dma_unfiltered2_altera_axi_master_awlock),                       //                 .awlock
		.awcache                (axi_dma_unfiltered2_altera_axi_master_awcache),                      //                 .awcache
		.awprot                 (axi_dma_unfiltered2_altera_axi_master_awprot),                       //                 .awprot
		.awvalid                (axi_dma_unfiltered2_altera_axi_master_awvalid),                      //                 .awvalid
		.awready                (axi_dma_unfiltered2_altera_axi_master_awready),                      //                 .awready
		.wid                    (axi_dma_unfiltered2_altera_axi_master_wid),                          //                 .wid
		.wdata                  (axi_dma_unfiltered2_altera_axi_master_wdata),                        //                 .wdata
		.wstrb                  (axi_dma_unfiltered2_altera_axi_master_wstrb),                        //                 .wstrb
		.wlast                  (axi_dma_unfiltered2_altera_axi_master_wlast),                        //                 .wlast
		.wvalid                 (axi_dma_unfiltered2_altera_axi_master_wvalid),                       //                 .wvalid
		.wready                 (axi_dma_unfiltered2_altera_axi_master_wready),                       //                 .wready
		.bid                    (axi_dma_unfiltered2_altera_axi_master_bid),                          //                 .bid
		.bresp                  (axi_dma_unfiltered2_altera_axi_master_bresp),                        //                 .bresp
		.bvalid                 (axi_dma_unfiltered2_altera_axi_master_bvalid),                       //                 .bvalid
		.bready                 (axi_dma_unfiltered2_altera_axi_master_bready),                       //                 .bready
		.arid                   (axi_dma_unfiltered2_altera_axi_master_arid),                         //                 .arid
		.araddr                 (axi_dma_unfiltered2_altera_axi_master_araddr),                       //                 .araddr
		.arlen                  (axi_dma_unfiltered2_altera_axi_master_arlen),                        //                 .arlen
		.arsize                 (axi_dma_unfiltered2_altera_axi_master_arsize),                       //                 .arsize
		.arburst                (axi_dma_unfiltered2_altera_axi_master_arburst),                      //                 .arburst
		.arlock                 (axi_dma_unfiltered2_altera_axi_master_arlock),                       //                 .arlock
		.arcache                (axi_dma_unfiltered2_altera_axi_master_arcache),                      //                 .arcache
		.arprot                 (axi_dma_unfiltered2_altera_axi_master_arprot),                       //                 .arprot
		.arvalid                (axi_dma_unfiltered2_altera_axi_master_arvalid),                      //                 .arvalid
		.arready                (axi_dma_unfiltered2_altera_axi_master_arready),                      //                 .arready
		.rid                    (axi_dma_unfiltered2_altera_axi_master_rid),                          //                 .rid
		.rdata                  (axi_dma_unfiltered2_altera_axi_master_rdata),                        //                 .rdata
		.rresp                  (axi_dma_unfiltered2_altera_axi_master_rresp),                        //                 .rresp
		.rlast                  (axi_dma_unfiltered2_altera_axi_master_rlast),                        //                 .rlast
		.rvalid                 (axi_dma_unfiltered2_altera_axi_master_rvalid),                       //                 .rvalid
		.rready                 (axi_dma_unfiltered2_altera_axi_master_rready),                       //                 .rready
		.awuser                 (1'b0),                                                               //      (terminated)
		.aruser                 (1'b0),                                                               //      (terminated)
		.awqos                  (4'b0000),                                                            //      (terminated)
		.arqos                  (4'b0000),                                                            //      (terminated)
		.awregion               (4'b0000),                                                            //      (terminated)
		.arregion               (4'b0000),                                                            //      (terminated)
		.wuser                  (1'b0),                                                               //      (terminated)
		.ruser                  (),                                                                   //      (terminated)
		.buser                  ()                                                                    //      (terminated)
	);

	altera_merlin_axi_master_ni #(
		.ID_WIDTH                  (7),
		.ADDR_WIDTH                (32),
		.RDATA_WIDTH               (64),
		.WDATA_WIDTH               (64),
		.ADDR_USER_WIDTH           (1),
		.DATA_USER_WIDTH           (1),
		.AXI_BURST_LENGTH_WIDTH    (4),
		.AXI_LOCK_WIDTH            (2),
		.AXI_VERSION               ("AXI3"),
		.WRITE_ISSUING_CAPABILITY  (1),
		.READ_ISSUING_CAPABILITY   (1),
		.PKT_BEGIN_BURST           (133),
		.PKT_CACHE_H               (150),
		.PKT_CACHE_L               (147),
		.PKT_ADDR_SIDEBAND_H       (131),
		.PKT_ADDR_SIDEBAND_L       (131),
		.PKT_PROTECTION_H          (146),
		.PKT_PROTECTION_L          (144),
		.PKT_BURST_SIZE_H          (128),
		.PKT_BURST_SIZE_L          (126),
		.PKT_BURST_TYPE_H          (130),
		.PKT_BURST_TYPE_L          (129),
		.PKT_RESPONSE_STATUS_L     (151),
		.PKT_RESPONSE_STATUS_H     (152),
		.PKT_BURSTWRAP_H           (125),
		.PKT_BURSTWRAP_L           (118),
		.PKT_BYTE_CNT_H            (117),
		.PKT_BYTE_CNT_L            (110),
		.PKT_ADDR_H                (103),
		.PKT_ADDR_L                (72),
		.PKT_TRANS_EXCLUSIVE       (109),
		.PKT_TRANS_LOCK            (108),
		.PKT_TRANS_COMPRESSED_READ (104),
		.PKT_TRANS_POSTED          (105),
		.PKT_TRANS_WRITE           (106),
		.PKT_TRANS_READ            (107),
		.PKT_DATA_H                (63),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (71),
		.PKT_BYTEEN_L              (64),
		.PKT_SRC_ID_H              (135),
		.PKT_SRC_ID_L              (135),
		.PKT_DEST_ID_H             (136),
		.PKT_DEST_ID_L             (136),
		.PKT_THREAD_ID_H           (143),
		.PKT_THREAD_ID_L           (137),
		.PKT_QOS_L                 (134),
		.PKT_QOS_H                 (134),
		.PKT_ORI_BURST_SIZE_L      (153),
		.PKT_ORI_BURST_SIZE_H      (155),
		.PKT_DATA_SIDEBAND_H       (132),
		.PKT_DATA_SIDEBAND_L       (132),
		.ST_DATA_W                 (156),
		.ST_CHANNEL_W              (4),
		.ID                        (0)
	) axi_dma_orig_block_altera_axi_master_agent (
		.aclk                   (clk_0_clk_clk),                                                     //              clk.clk
		.aresetn                (~axi_dma_unfiltered2_reset_sink_reset_bridge_in_reset_reset),       //        clk_reset.reset_n
		.write_cp_valid         (axi_dma_orig_block_altera_axi_master_agent_write_cp_valid),         //         write_cp.valid
		.write_cp_data          (axi_dma_orig_block_altera_axi_master_agent_write_cp_data),          //                 .data
		.write_cp_startofpacket (axi_dma_orig_block_altera_axi_master_agent_write_cp_startofpacket), //                 .startofpacket
		.write_cp_endofpacket   (axi_dma_orig_block_altera_axi_master_agent_write_cp_endofpacket),   //                 .endofpacket
		.write_cp_ready         (axi_dma_orig_block_altera_axi_master_agent_write_cp_ready),         //                 .ready
		.write_rp_valid         (rsp_mux_002_src_valid),                                             //         write_rp.valid
		.write_rp_data          (rsp_mux_002_src_data),                                              //                 .data
		.write_rp_channel       (rsp_mux_002_src_channel),                                           //                 .channel
		.write_rp_startofpacket (rsp_mux_002_src_startofpacket),                                     //                 .startofpacket
		.write_rp_endofpacket   (rsp_mux_002_src_endofpacket),                                       //                 .endofpacket
		.write_rp_ready         (rsp_mux_002_src_ready),                                             //                 .ready
		.read_cp_valid          (axi_dma_orig_block_altera_axi_master_agent_read_cp_valid),          //          read_cp.valid
		.read_cp_data           (axi_dma_orig_block_altera_axi_master_agent_read_cp_data),           //                 .data
		.read_cp_startofpacket  (axi_dma_orig_block_altera_axi_master_agent_read_cp_startofpacket),  //                 .startofpacket
		.read_cp_endofpacket    (axi_dma_orig_block_altera_axi_master_agent_read_cp_endofpacket),    //                 .endofpacket
		.read_cp_ready          (axi_dma_orig_block_altera_axi_master_agent_read_cp_ready),          //                 .ready
		.read_rp_valid          (rsp_mux_003_src_valid),                                             //          read_rp.valid
		.read_rp_data           (rsp_mux_003_src_data),                                              //                 .data
		.read_rp_channel        (rsp_mux_003_src_channel),                                           //                 .channel
		.read_rp_startofpacket  (rsp_mux_003_src_startofpacket),                                     //                 .startofpacket
		.read_rp_endofpacket    (rsp_mux_003_src_endofpacket),                                       //                 .endofpacket
		.read_rp_ready          (rsp_mux_003_src_ready),                                             //                 .ready
		.awid                   (axi_dma_orig_block_altera_axi_master_awid),                         // altera_axi_slave.awid
		.awaddr                 (axi_dma_orig_block_altera_axi_master_awaddr),                       //                 .awaddr
		.awlen                  (axi_dma_orig_block_altera_axi_master_awlen),                        //                 .awlen
		.awsize                 (axi_dma_orig_block_altera_axi_master_awsize),                       //                 .awsize
		.awburst                (axi_dma_orig_block_altera_axi_master_awburst),                      //                 .awburst
		.awlock                 (axi_dma_orig_block_altera_axi_master_awlock),                       //                 .awlock
		.awcache                (axi_dma_orig_block_altera_axi_master_awcache),                      //                 .awcache
		.awprot                 (axi_dma_orig_block_altera_axi_master_awprot),                       //                 .awprot
		.awvalid                (axi_dma_orig_block_altera_axi_master_awvalid),                      //                 .awvalid
		.awready                (axi_dma_orig_block_altera_axi_master_awready),                      //                 .awready
		.wid                    (axi_dma_orig_block_altera_axi_master_wid),                          //                 .wid
		.wdata                  (axi_dma_orig_block_altera_axi_master_wdata),                        //                 .wdata
		.wstrb                  (axi_dma_orig_block_altera_axi_master_wstrb),                        //                 .wstrb
		.wlast                  (axi_dma_orig_block_altera_axi_master_wlast),                        //                 .wlast
		.wvalid                 (axi_dma_orig_block_altera_axi_master_wvalid),                       //                 .wvalid
		.wready                 (axi_dma_orig_block_altera_axi_master_wready),                       //                 .wready
		.bid                    (axi_dma_orig_block_altera_axi_master_bid),                          //                 .bid
		.bresp                  (axi_dma_orig_block_altera_axi_master_bresp),                        //                 .bresp
		.bvalid                 (axi_dma_orig_block_altera_axi_master_bvalid),                       //                 .bvalid
		.bready                 (axi_dma_orig_block_altera_axi_master_bready),                       //                 .bready
		.arid                   (axi_dma_orig_block_altera_axi_master_arid),                         //                 .arid
		.araddr                 (axi_dma_orig_block_altera_axi_master_araddr),                       //                 .araddr
		.arlen                  (axi_dma_orig_block_altera_axi_master_arlen),                        //                 .arlen
		.arsize                 (axi_dma_orig_block_altera_axi_master_arsize),                       //                 .arsize
		.arburst                (axi_dma_orig_block_altera_axi_master_arburst),                      //                 .arburst
		.arlock                 (axi_dma_orig_block_altera_axi_master_arlock),                       //                 .arlock
		.arcache                (axi_dma_orig_block_altera_axi_master_arcache),                      //                 .arcache
		.arprot                 (axi_dma_orig_block_altera_axi_master_arprot),                       //                 .arprot
		.arvalid                (axi_dma_orig_block_altera_axi_master_arvalid),                      //                 .arvalid
		.arready                (axi_dma_orig_block_altera_axi_master_arready),                      //                 .arready
		.rid                    (axi_dma_orig_block_altera_axi_master_rid),                          //                 .rid
		.rdata                  (axi_dma_orig_block_altera_axi_master_rdata),                        //                 .rdata
		.rresp                  (axi_dma_orig_block_altera_axi_master_rresp),                        //                 .rresp
		.rlast                  (axi_dma_orig_block_altera_axi_master_rlast),                        //                 .rlast
		.rvalid                 (axi_dma_orig_block_altera_axi_master_rvalid),                       //                 .rvalid
		.rready                 (axi_dma_orig_block_altera_axi_master_rready),                       //                 .rready
		.awuser                 (1'b0),                                                              //      (terminated)
		.aruser                 (1'b0),                                                              //      (terminated)
		.awqos                  (4'b0000),                                                           //      (terminated)
		.arqos                  (4'b0000),                                                           //      (terminated)
		.awregion               (4'b0000),                                                           //      (terminated)
		.arregion               (4'b0000),                                                           //      (terminated)
		.wuser                  (1'b0),                                                              //      (terminated)
		.ruser                  (),                                                                  //      (terminated)
		.buser                  ()                                                                   //      (terminated)
	);

	altera_merlin_axi_slave_ni #(
		.PKT_QOS_H                   (134),
		.PKT_QOS_L                   (134),
		.PKT_THREAD_ID_H             (143),
		.PKT_THREAD_ID_L             (137),
		.PKT_RESPONSE_STATUS_H       (152),
		.PKT_RESPONSE_STATUS_L       (151),
		.PKT_BEGIN_BURST             (133),
		.PKT_CACHE_H                 (150),
		.PKT_CACHE_L                 (147),
		.PKT_DATA_SIDEBAND_H         (132),
		.PKT_DATA_SIDEBAND_L         (132),
		.PKT_ADDR_SIDEBAND_H         (131),
		.PKT_ADDR_SIDEBAND_L         (131),
		.PKT_BURST_TYPE_H            (130),
		.PKT_BURST_TYPE_L            (129),
		.PKT_PROTECTION_H            (146),
		.PKT_PROTECTION_L            (144),
		.PKT_BURST_SIZE_H            (128),
		.PKT_BURST_SIZE_L            (126),
		.PKT_BURSTWRAP_H             (125),
		.PKT_BURSTWRAP_L             (118),
		.PKT_BYTE_CNT_H              (117),
		.PKT_BYTE_CNT_L              (110),
		.PKT_ADDR_H                  (103),
		.PKT_ADDR_L                  (72),
		.PKT_TRANS_EXCLUSIVE         (109),
		.PKT_TRANS_LOCK              (108),
		.PKT_TRANS_COMPRESSED_READ   (104),
		.PKT_TRANS_POSTED            (105),
		.PKT_TRANS_WRITE             (106),
		.PKT_TRANS_READ              (107),
		.PKT_DATA_H                  (63),
		.PKT_DATA_L                  (0),
		.PKT_BYTEEN_H                (71),
		.PKT_BYTEEN_L                (64),
		.PKT_SRC_ID_H                (135),
		.PKT_SRC_ID_L                (135),
		.PKT_DEST_ID_H               (136),
		.PKT_DEST_ID_L               (136),
		.PKT_ORI_BURST_SIZE_L        (153),
		.PKT_ORI_BURST_SIZE_H        (155),
		.ADDR_USER_WIDTH             (1),
		.DATA_USER_WIDTH             (1),
		.ST_DATA_W                   (156),
		.ADDR_WIDTH                  (32),
		.RDATA_WIDTH                 (64),
		.WDATA_WIDTH                 (64),
		.ST_CHANNEL_W                (4),
		.AXI_SLAVE_ID_W              (8),
		.PASS_ID_TO_SLAVE            (1),
		.AXI_VERSION                 ("AXI3"),
		.WRITE_ACCEPTANCE_CAPABILITY (14),
		.READ_ACCEPTANCE_CAPABILITY  (14)
	) hps_0_f2h_sdram1_data_agent (
		.aclk                   (clk_0_clk_clk),                                                       //        clock_sink.clk
		.aresetn                (~hps_0_f2h_sdram1_data_agent_reset_sink_reset_bridge_in_reset_reset), //        reset_sink.reset_n
		.read_cp_valid          (cmd_mux_001_src_valid),                                               //           read_cp.valid
		.read_cp_ready          (cmd_mux_001_src_ready),                                               //                  .ready
		.read_cp_data           (cmd_mux_001_src_data),                                                //                  .data
		.read_cp_channel        (cmd_mux_001_src_channel),                                             //                  .channel
		.read_cp_startofpacket  (cmd_mux_001_src_startofpacket),                                       //                  .startofpacket
		.read_cp_endofpacket    (cmd_mux_001_src_endofpacket),                                         //                  .endofpacket
		.write_cp_ready         (cmd_mux_src_ready),                                                   //          write_cp.ready
		.write_cp_valid         (cmd_mux_src_valid),                                                   //                  .valid
		.write_cp_data          (cmd_mux_src_data),                                                    //                  .data
		.write_cp_channel       (cmd_mux_src_channel),                                                 //                  .channel
		.write_cp_startofpacket (cmd_mux_src_startofpacket),                                           //                  .startofpacket
		.write_cp_endofpacket   (cmd_mux_src_endofpacket),                                             //                  .endofpacket
		.read_rp_ready          (hps_0_f2h_sdram1_data_agent_read_rp_ready),                           //           read_rp.ready
		.read_rp_valid          (hps_0_f2h_sdram1_data_agent_read_rp_valid),                           //                  .valid
		.read_rp_data           (hps_0_f2h_sdram1_data_agent_read_rp_data),                            //                  .data
		.read_rp_startofpacket  (hps_0_f2h_sdram1_data_agent_read_rp_startofpacket),                   //                  .startofpacket
		.read_rp_endofpacket    (hps_0_f2h_sdram1_data_agent_read_rp_endofpacket),                     //                  .endofpacket
		.write_rp_ready         (hps_0_f2h_sdram1_data_agent_write_rp_ready),                          //          write_rp.ready
		.write_rp_valid         (hps_0_f2h_sdram1_data_agent_write_rp_valid),                          //                  .valid
		.write_rp_data          (hps_0_f2h_sdram1_data_agent_write_rp_data),                           //                  .data
		.write_rp_startofpacket (hps_0_f2h_sdram1_data_agent_write_rp_startofpacket),                  //                  .startofpacket
		.write_rp_endofpacket   (hps_0_f2h_sdram1_data_agent_write_rp_endofpacket),                    //                  .endofpacket
		.awid                   (hps_0_f2h_sdram1_data_awid),                                          // altera_axi_master.awid
		.awaddr                 (hps_0_f2h_sdram1_data_awaddr),                                        //                  .awaddr
		.awlen                  (hps_0_f2h_sdram1_data_awlen),                                         //                  .awlen
		.awsize                 (hps_0_f2h_sdram1_data_awsize),                                        //                  .awsize
		.awburst                (hps_0_f2h_sdram1_data_awburst),                                       //                  .awburst
		.awlock                 (hps_0_f2h_sdram1_data_awlock),                                        //                  .awlock
		.awcache                (hps_0_f2h_sdram1_data_awcache),                                       //                  .awcache
		.awprot                 (hps_0_f2h_sdram1_data_awprot),                                        //                  .awprot
		.awvalid                (hps_0_f2h_sdram1_data_awvalid),                                       //                  .awvalid
		.awready                (hps_0_f2h_sdram1_data_awready),                                       //                  .awready
		.wid                    (hps_0_f2h_sdram1_data_wid),                                           //                  .wid
		.wdata                  (hps_0_f2h_sdram1_data_wdata),                                         //                  .wdata
		.wstrb                  (hps_0_f2h_sdram1_data_wstrb),                                         //                  .wstrb
		.wlast                  (hps_0_f2h_sdram1_data_wlast),                                         //                  .wlast
		.wvalid                 (hps_0_f2h_sdram1_data_wvalid),                                        //                  .wvalid
		.wready                 (hps_0_f2h_sdram1_data_wready),                                        //                  .wready
		.bid                    (hps_0_f2h_sdram1_data_bid),                                           //                  .bid
		.bresp                  (hps_0_f2h_sdram1_data_bresp),                                         //                  .bresp
		.bvalid                 (hps_0_f2h_sdram1_data_bvalid),                                        //                  .bvalid
		.bready                 (hps_0_f2h_sdram1_data_bready),                                        //                  .bready
		.arid                   (hps_0_f2h_sdram1_data_arid),                                          //                  .arid
		.araddr                 (hps_0_f2h_sdram1_data_araddr),                                        //                  .araddr
		.arlen                  (hps_0_f2h_sdram1_data_arlen),                                         //                  .arlen
		.arsize                 (hps_0_f2h_sdram1_data_arsize),                                        //                  .arsize
		.arburst                (hps_0_f2h_sdram1_data_arburst),                                       //                  .arburst
		.arlock                 (hps_0_f2h_sdram1_data_arlock),                                        //                  .arlock
		.arcache                (hps_0_f2h_sdram1_data_arcache),                                       //                  .arcache
		.arprot                 (hps_0_f2h_sdram1_data_arprot),                                        //                  .arprot
		.arvalid                (hps_0_f2h_sdram1_data_arvalid),                                       //                  .arvalid
		.arready                (hps_0_f2h_sdram1_data_arready),                                       //                  .arready
		.rid                    (hps_0_f2h_sdram1_data_rid),                                           //                  .rid
		.rdata                  (hps_0_f2h_sdram1_data_rdata),                                         //                  .rdata
		.rresp                  (hps_0_f2h_sdram1_data_rresp),                                         //                  .rresp
		.rlast                  (hps_0_f2h_sdram1_data_rlast),                                         //                  .rlast
		.rvalid                 (hps_0_f2h_sdram1_data_rvalid),                                        //                  .rvalid
		.rready                 (hps_0_f2h_sdram1_data_rready),                                        //                  .rready
		.awuser                 (),                                                                    //       (terminated)
		.aruser                 ()                                                                     //       (terminated)
	);

	Kvazaar_QSYS_mm_interconnect_1_router router (
		.sink_ready         (axi_dma_unfiltered2_altera_axi_master_agent_write_cp_ready),         //      sink.ready
		.sink_valid         (axi_dma_unfiltered2_altera_axi_master_agent_write_cp_valid),         //          .valid
		.sink_data          (axi_dma_unfiltered2_altera_axi_master_agent_write_cp_data),          //          .data
		.sink_startofpacket (axi_dma_unfiltered2_altera_axi_master_agent_write_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (axi_dma_unfiltered2_altera_axi_master_agent_write_cp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                      //       clk.clk
		.reset              (axi_dma_unfiltered2_reset_sink_reset_bridge_in_reset_reset),         // clk_reset.reset
		.src_ready          (router_src_ready),                                                   //       src.ready
		.src_valid          (router_src_valid),                                                   //          .valid
		.src_data           (router_src_data),                                                    //          .data
		.src_channel        (router_src_channel),                                                 //          .channel
		.src_startofpacket  (router_src_startofpacket),                                           //          .startofpacket
		.src_endofpacket    (router_src_endofpacket)                                              //          .endofpacket
	);

	Kvazaar_QSYS_mm_interconnect_1_router_001 router_001 (
		.sink_ready         (axi_dma_unfiltered2_altera_axi_master_agent_read_cp_ready),         //      sink.ready
		.sink_valid         (axi_dma_unfiltered2_altera_axi_master_agent_read_cp_valid),         //          .valid
		.sink_data          (axi_dma_unfiltered2_altera_axi_master_agent_read_cp_data),          //          .data
		.sink_startofpacket (axi_dma_unfiltered2_altera_axi_master_agent_read_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (axi_dma_unfiltered2_altera_axi_master_agent_read_cp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                     //       clk.clk
		.reset              (axi_dma_unfiltered2_reset_sink_reset_bridge_in_reset_reset),        // clk_reset.reset
		.src_ready          (router_001_src_ready),                                              //       src.ready
		.src_valid          (router_001_src_valid),                                              //          .valid
		.src_data           (router_001_src_data),                                               //          .data
		.src_channel        (router_001_src_channel),                                            //          .channel
		.src_startofpacket  (router_001_src_startofpacket),                                      //          .startofpacket
		.src_endofpacket    (router_001_src_endofpacket)                                         //          .endofpacket
	);

	Kvazaar_QSYS_mm_interconnect_1_router router_002 (
		.sink_ready         (axi_dma_orig_block_altera_axi_master_agent_write_cp_ready),         //      sink.ready
		.sink_valid         (axi_dma_orig_block_altera_axi_master_agent_write_cp_valid),         //          .valid
		.sink_data          (axi_dma_orig_block_altera_axi_master_agent_write_cp_data),          //          .data
		.sink_startofpacket (axi_dma_orig_block_altera_axi_master_agent_write_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (axi_dma_orig_block_altera_axi_master_agent_write_cp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                     //       clk.clk
		.reset              (axi_dma_unfiltered2_reset_sink_reset_bridge_in_reset_reset),        // clk_reset.reset
		.src_ready          (router_002_src_ready),                                              //       src.ready
		.src_valid          (router_002_src_valid),                                              //          .valid
		.src_data           (router_002_src_data),                                               //          .data
		.src_channel        (router_002_src_channel),                                            //          .channel
		.src_startofpacket  (router_002_src_startofpacket),                                      //          .startofpacket
		.src_endofpacket    (router_002_src_endofpacket)                                         //          .endofpacket
	);

	Kvazaar_QSYS_mm_interconnect_1_router_001 router_003 (
		.sink_ready         (axi_dma_orig_block_altera_axi_master_agent_read_cp_ready),         //      sink.ready
		.sink_valid         (axi_dma_orig_block_altera_axi_master_agent_read_cp_valid),         //          .valid
		.sink_data          (axi_dma_orig_block_altera_axi_master_agent_read_cp_data),          //          .data
		.sink_startofpacket (axi_dma_orig_block_altera_axi_master_agent_read_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (axi_dma_orig_block_altera_axi_master_agent_read_cp_endofpacket),   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                    //       clk.clk
		.reset              (axi_dma_unfiltered2_reset_sink_reset_bridge_in_reset_reset),       // clk_reset.reset
		.src_ready          (router_003_src_ready),                                             //       src.ready
		.src_valid          (router_003_src_valid),                                             //          .valid
		.src_data           (router_003_src_data),                                              //          .data
		.src_channel        (router_003_src_channel),                                           //          .channel
		.src_startofpacket  (router_003_src_startofpacket),                                     //          .startofpacket
		.src_endofpacket    (router_003_src_endofpacket)                                        //          .endofpacket
	);

	Kvazaar_QSYS_mm_interconnect_1_router_004 router_004 (
		.sink_ready         (hps_0_f2h_sdram1_data_agent_write_rp_ready),                         //      sink.ready
		.sink_valid         (hps_0_f2h_sdram1_data_agent_write_rp_valid),                         //          .valid
		.sink_data          (hps_0_f2h_sdram1_data_agent_write_rp_data),                          //          .data
		.sink_startofpacket (hps_0_f2h_sdram1_data_agent_write_rp_startofpacket),                 //          .startofpacket
		.sink_endofpacket   (hps_0_f2h_sdram1_data_agent_write_rp_endofpacket),                   //          .endofpacket
		.clk                (clk_0_clk_clk),                                                      //       clk.clk
		.reset              (hps_0_f2h_sdram1_data_agent_reset_sink_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_004_src_ready),                                               //       src.ready
		.src_valid          (router_004_src_valid),                                               //          .valid
		.src_data           (router_004_src_data),                                                //          .data
		.src_channel        (router_004_src_channel),                                             //          .channel
		.src_startofpacket  (router_004_src_startofpacket),                                       //          .startofpacket
		.src_endofpacket    (router_004_src_endofpacket)                                          //          .endofpacket
	);

	Kvazaar_QSYS_mm_interconnect_1_router_005 router_005 (
		.sink_ready         (hps_0_f2h_sdram1_data_agent_read_rp_ready),                          //      sink.ready
		.sink_valid         (hps_0_f2h_sdram1_data_agent_read_rp_valid),                          //          .valid
		.sink_data          (hps_0_f2h_sdram1_data_agent_read_rp_data),                           //          .data
		.sink_startofpacket (hps_0_f2h_sdram1_data_agent_read_rp_startofpacket),                  //          .startofpacket
		.sink_endofpacket   (hps_0_f2h_sdram1_data_agent_read_rp_endofpacket),                    //          .endofpacket
		.clk                (clk_0_clk_clk),                                                      //       clk.clk
		.reset              (hps_0_f2h_sdram1_data_agent_reset_sink_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready          (router_005_src_ready),                                               //       src.ready
		.src_valid          (router_005_src_valid),                                               //          .valid
		.src_data           (router_005_src_data),                                                //          .data
		.src_channel        (router_005_src_channel),                                             //          .channel
		.src_startofpacket  (router_005_src_startofpacket),                                       //          .startofpacket
		.src_endofpacket    (router_005_src_endofpacket)                                          //          .endofpacket
	);

	Kvazaar_QSYS_mm_interconnect_1_cmd_demux cmd_demux (
		.clk                (clk_0_clk_clk),                                              //       clk.clk
		.reset              (axi_dma_unfiltered2_reset_sink_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_src_ready),                                           //      sink.ready
		.sink_channel       (router_src_channel),                                         //          .channel
		.sink_data          (router_src_data),                                            //          .data
		.sink_startofpacket (router_src_startofpacket),                                   //          .startofpacket
		.sink_endofpacket   (router_src_endofpacket),                                     //          .endofpacket
		.sink_valid         (router_src_valid),                                           //          .valid
		.src0_ready         (cmd_demux_src0_ready),                                       //      src0.ready
		.src0_valid         (cmd_demux_src0_valid),                                       //          .valid
		.src0_data          (cmd_demux_src0_data),                                        //          .data
		.src0_channel       (cmd_demux_src0_channel),                                     //          .channel
		.src0_startofpacket (cmd_demux_src0_startofpacket),                               //          .startofpacket
		.src0_endofpacket   (cmd_demux_src0_endofpacket)                                  //          .endofpacket
	);

	Kvazaar_QSYS_mm_interconnect_1_cmd_demux cmd_demux_001 (
		.clk                (clk_0_clk_clk),                                              //       clk.clk
		.reset              (axi_dma_unfiltered2_reset_sink_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_001_src_ready),                                       //      sink.ready
		.sink_channel       (router_001_src_channel),                                     //          .channel
		.sink_data          (router_001_src_data),                                        //          .data
		.sink_startofpacket (router_001_src_startofpacket),                               //          .startofpacket
		.sink_endofpacket   (router_001_src_endofpacket),                                 //          .endofpacket
		.sink_valid         (router_001_src_valid),                                       //          .valid
		.src0_ready         (cmd_demux_001_src0_ready),                                   //      src0.ready
		.src0_valid         (cmd_demux_001_src0_valid),                                   //          .valid
		.src0_data          (cmd_demux_001_src0_data),                                    //          .data
		.src0_channel       (cmd_demux_001_src0_channel),                                 //          .channel
		.src0_startofpacket (cmd_demux_001_src0_startofpacket),                           //          .startofpacket
		.src0_endofpacket   (cmd_demux_001_src0_endofpacket)                              //          .endofpacket
	);

	Kvazaar_QSYS_mm_interconnect_1_cmd_demux cmd_demux_002 (
		.clk                (clk_0_clk_clk),                                              //       clk.clk
		.reset              (axi_dma_unfiltered2_reset_sink_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_002_src_ready),                                       //      sink.ready
		.sink_channel       (router_002_src_channel),                                     //          .channel
		.sink_data          (router_002_src_data),                                        //          .data
		.sink_startofpacket (router_002_src_startofpacket),                               //          .startofpacket
		.sink_endofpacket   (router_002_src_endofpacket),                                 //          .endofpacket
		.sink_valid         (router_002_src_valid),                                       //          .valid
		.src0_ready         (cmd_demux_002_src0_ready),                                   //      src0.ready
		.src0_valid         (cmd_demux_002_src0_valid),                                   //          .valid
		.src0_data          (cmd_demux_002_src0_data),                                    //          .data
		.src0_channel       (cmd_demux_002_src0_channel),                                 //          .channel
		.src0_startofpacket (cmd_demux_002_src0_startofpacket),                           //          .startofpacket
		.src0_endofpacket   (cmd_demux_002_src0_endofpacket)                              //          .endofpacket
	);

	Kvazaar_QSYS_mm_interconnect_1_cmd_demux cmd_demux_003 (
		.clk                (clk_0_clk_clk),                                              //       clk.clk
		.reset              (axi_dma_unfiltered2_reset_sink_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_003_src_ready),                                       //      sink.ready
		.sink_channel       (router_003_src_channel),                                     //          .channel
		.sink_data          (router_003_src_data),                                        //          .data
		.sink_startofpacket (router_003_src_startofpacket),                               //          .startofpacket
		.sink_endofpacket   (router_003_src_endofpacket),                                 //          .endofpacket
		.sink_valid         (router_003_src_valid),                                       //          .valid
		.src0_ready         (cmd_demux_003_src0_ready),                                   //      src0.ready
		.src0_valid         (cmd_demux_003_src0_valid),                                   //          .valid
		.src0_data          (cmd_demux_003_src0_data),                                    //          .data
		.src0_channel       (cmd_demux_003_src0_channel),                                 //          .channel
		.src0_startofpacket (cmd_demux_003_src0_startofpacket),                           //          .startofpacket
		.src0_endofpacket   (cmd_demux_003_src0_endofpacket)                              //          .endofpacket
	);

	Kvazaar_QSYS_mm_interconnect_1_cmd_mux cmd_mux (
		.clk                 (clk_0_clk_clk),                                                      //       clk.clk
		.reset               (hps_0_f2h_sdram1_data_agent_reset_sink_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_src_ready),                                                  //       src.ready
		.src_valid           (cmd_mux_src_valid),                                                  //          .valid
		.src_data            (cmd_mux_src_data),                                                   //          .data
		.src_channel         (cmd_mux_src_channel),                                                //          .channel
		.src_startofpacket   (cmd_mux_src_startofpacket),                                          //          .startofpacket
		.src_endofpacket     (cmd_mux_src_endofpacket),                                            //          .endofpacket
		.sink0_ready         (cmd_demux_src0_ready),                                               //     sink0.ready
		.sink0_valid         (cmd_demux_src0_valid),                                               //          .valid
		.sink0_channel       (cmd_demux_src0_channel),                                             //          .channel
		.sink0_data          (cmd_demux_src0_data),                                                //          .data
		.sink0_startofpacket (cmd_demux_src0_startofpacket),                                       //          .startofpacket
		.sink0_endofpacket   (cmd_demux_src0_endofpacket),                                         //          .endofpacket
		.sink1_ready         (cmd_demux_002_src0_ready),                                           //     sink1.ready
		.sink1_valid         (cmd_demux_002_src0_valid),                                           //          .valid
		.sink1_channel       (cmd_demux_002_src0_channel),                                         //          .channel
		.sink1_data          (cmd_demux_002_src0_data),                                            //          .data
		.sink1_startofpacket (cmd_demux_002_src0_startofpacket),                                   //          .startofpacket
		.sink1_endofpacket   (cmd_demux_002_src0_endofpacket)                                      //          .endofpacket
	);

	Kvazaar_QSYS_mm_interconnect_1_cmd_mux cmd_mux_001 (
		.clk                 (clk_0_clk_clk),                                                      //       clk.clk
		.reset               (hps_0_f2h_sdram1_data_agent_reset_sink_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_mux_001_src_ready),                                              //       src.ready
		.src_valid           (cmd_mux_001_src_valid),                                              //          .valid
		.src_data            (cmd_mux_001_src_data),                                               //          .data
		.src_channel         (cmd_mux_001_src_channel),                                            //          .channel
		.src_startofpacket   (cmd_mux_001_src_startofpacket),                                      //          .startofpacket
		.src_endofpacket     (cmd_mux_001_src_endofpacket),                                        //          .endofpacket
		.sink0_ready         (cmd_demux_001_src0_ready),                                           //     sink0.ready
		.sink0_valid         (cmd_demux_001_src0_valid),                                           //          .valid
		.sink0_channel       (cmd_demux_001_src0_channel),                                         //          .channel
		.sink0_data          (cmd_demux_001_src0_data),                                            //          .data
		.sink0_startofpacket (cmd_demux_001_src0_startofpacket),                                   //          .startofpacket
		.sink0_endofpacket   (cmd_demux_001_src0_endofpacket),                                     //          .endofpacket
		.sink1_ready         (cmd_demux_003_src0_ready),                                           //     sink1.ready
		.sink1_valid         (cmd_demux_003_src0_valid),                                           //          .valid
		.sink1_channel       (cmd_demux_003_src0_channel),                                         //          .channel
		.sink1_data          (cmd_demux_003_src0_data),                                            //          .data
		.sink1_startofpacket (cmd_demux_003_src0_startofpacket),                                   //          .startofpacket
		.sink1_endofpacket   (cmd_demux_003_src0_endofpacket)                                      //          .endofpacket
	);

	Kvazaar_QSYS_mm_interconnect_1_rsp_demux rsp_demux (
		.clk                (clk_0_clk_clk),                                                      //       clk.clk
		.reset              (hps_0_f2h_sdram1_data_agent_reset_sink_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_004_src_ready),                                               //      sink.ready
		.sink_channel       (router_004_src_channel),                                             //          .channel
		.sink_data          (router_004_src_data),                                                //          .data
		.sink_startofpacket (router_004_src_startofpacket),                                       //          .startofpacket
		.sink_endofpacket   (router_004_src_endofpacket),                                         //          .endofpacket
		.sink_valid         (router_004_src_valid),                                               //          .valid
		.src0_ready         (rsp_demux_src0_ready),                                               //      src0.ready
		.src0_valid         (rsp_demux_src0_valid),                                               //          .valid
		.src0_data          (rsp_demux_src0_data),                                                //          .data
		.src0_channel       (rsp_demux_src0_channel),                                             //          .channel
		.src0_startofpacket (rsp_demux_src0_startofpacket),                                       //          .startofpacket
		.src0_endofpacket   (rsp_demux_src0_endofpacket),                                         //          .endofpacket
		.src1_ready         (rsp_demux_src1_ready),                                               //      src1.ready
		.src1_valid         (rsp_demux_src1_valid),                                               //          .valid
		.src1_data          (rsp_demux_src1_data),                                                //          .data
		.src1_channel       (rsp_demux_src1_channel),                                             //          .channel
		.src1_startofpacket (rsp_demux_src1_startofpacket),                                       //          .startofpacket
		.src1_endofpacket   (rsp_demux_src1_endofpacket)                                          //          .endofpacket
	);

	Kvazaar_QSYS_mm_interconnect_1_rsp_demux rsp_demux_001 (
		.clk                (clk_0_clk_clk),                                                      //       clk.clk
		.reset              (hps_0_f2h_sdram1_data_agent_reset_sink_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (router_005_src_ready),                                               //      sink.ready
		.sink_channel       (router_005_src_channel),                                             //          .channel
		.sink_data          (router_005_src_data),                                                //          .data
		.sink_startofpacket (router_005_src_startofpacket),                                       //          .startofpacket
		.sink_endofpacket   (router_005_src_endofpacket),                                         //          .endofpacket
		.sink_valid         (router_005_src_valid),                                               //          .valid
		.src0_ready         (rsp_demux_001_src0_ready),                                           //      src0.ready
		.src0_valid         (rsp_demux_001_src0_valid),                                           //          .valid
		.src0_data          (rsp_demux_001_src0_data),                                            //          .data
		.src0_channel       (rsp_demux_001_src0_channel),                                         //          .channel
		.src0_startofpacket (rsp_demux_001_src0_startofpacket),                                   //          .startofpacket
		.src0_endofpacket   (rsp_demux_001_src0_endofpacket),                                     //          .endofpacket
		.src1_ready         (rsp_demux_001_src1_ready),                                           //      src1.ready
		.src1_valid         (rsp_demux_001_src1_valid),                                           //          .valid
		.src1_data          (rsp_demux_001_src1_data),                                            //          .data
		.src1_channel       (rsp_demux_001_src1_channel),                                         //          .channel
		.src1_startofpacket (rsp_demux_001_src1_startofpacket),                                   //          .startofpacket
		.src1_endofpacket   (rsp_demux_001_src1_endofpacket)                                      //          .endofpacket
	);

	Kvazaar_QSYS_mm_interconnect_1_rsp_mux rsp_mux (
		.clk                 (clk_0_clk_clk),                                              //       clk.clk
		.reset               (axi_dma_unfiltered2_reset_sink_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_mux_src_ready),                                          //       src.ready
		.src_valid           (rsp_mux_src_valid),                                          //          .valid
		.src_data            (rsp_mux_src_data),                                           //          .data
		.src_channel         (rsp_mux_src_channel),                                        //          .channel
		.src_startofpacket   (rsp_mux_src_startofpacket),                                  //          .startofpacket
		.src_endofpacket     (rsp_mux_src_endofpacket),                                    //          .endofpacket
		.sink0_ready         (rsp_demux_src0_ready),                                       //     sink0.ready
		.sink0_valid         (rsp_demux_src0_valid),                                       //          .valid
		.sink0_channel       (rsp_demux_src0_channel),                                     //          .channel
		.sink0_data          (rsp_demux_src0_data),                                        //          .data
		.sink0_startofpacket (rsp_demux_src0_startofpacket),                               //          .startofpacket
		.sink0_endofpacket   (rsp_demux_src0_endofpacket)                                  //          .endofpacket
	);

	Kvazaar_QSYS_mm_interconnect_1_rsp_mux rsp_mux_001 (
		.clk                 (clk_0_clk_clk),                                              //       clk.clk
		.reset               (axi_dma_unfiltered2_reset_sink_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_mux_001_src_ready),                                      //       src.ready
		.src_valid           (rsp_mux_001_src_valid),                                      //          .valid
		.src_data            (rsp_mux_001_src_data),                                       //          .data
		.src_channel         (rsp_mux_001_src_channel),                                    //          .channel
		.src_startofpacket   (rsp_mux_001_src_startofpacket),                              //          .startofpacket
		.src_endofpacket     (rsp_mux_001_src_endofpacket),                                //          .endofpacket
		.sink0_ready         (rsp_demux_001_src0_ready),                                   //     sink0.ready
		.sink0_valid         (rsp_demux_001_src0_valid),                                   //          .valid
		.sink0_channel       (rsp_demux_001_src0_channel),                                 //          .channel
		.sink0_data          (rsp_demux_001_src0_data),                                    //          .data
		.sink0_startofpacket (rsp_demux_001_src0_startofpacket),                           //          .startofpacket
		.sink0_endofpacket   (rsp_demux_001_src0_endofpacket)                              //          .endofpacket
	);

	Kvazaar_QSYS_mm_interconnect_1_rsp_mux rsp_mux_002 (
		.clk                 (clk_0_clk_clk),                                              //       clk.clk
		.reset               (axi_dma_unfiltered2_reset_sink_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_mux_002_src_ready),                                      //       src.ready
		.src_valid           (rsp_mux_002_src_valid),                                      //          .valid
		.src_data            (rsp_mux_002_src_data),                                       //          .data
		.src_channel         (rsp_mux_002_src_channel),                                    //          .channel
		.src_startofpacket   (rsp_mux_002_src_startofpacket),                              //          .startofpacket
		.src_endofpacket     (rsp_mux_002_src_endofpacket),                                //          .endofpacket
		.sink0_ready         (rsp_demux_src1_ready),                                       //     sink0.ready
		.sink0_valid         (rsp_demux_src1_valid),                                       //          .valid
		.sink0_channel       (rsp_demux_src1_channel),                                     //          .channel
		.sink0_data          (rsp_demux_src1_data),                                        //          .data
		.sink0_startofpacket (rsp_demux_src1_startofpacket),                               //          .startofpacket
		.sink0_endofpacket   (rsp_demux_src1_endofpacket)                                  //          .endofpacket
	);

	Kvazaar_QSYS_mm_interconnect_1_rsp_mux rsp_mux_003 (
		.clk                 (clk_0_clk_clk),                                              //       clk.clk
		.reset               (axi_dma_unfiltered2_reset_sink_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (rsp_mux_003_src_ready),                                      //       src.ready
		.src_valid           (rsp_mux_003_src_valid),                                      //          .valid
		.src_data            (rsp_mux_003_src_data),                                       //          .data
		.src_channel         (rsp_mux_003_src_channel),                                    //          .channel
		.src_startofpacket   (rsp_mux_003_src_startofpacket),                              //          .startofpacket
		.src_endofpacket     (rsp_mux_003_src_endofpacket),                                //          .endofpacket
		.sink0_ready         (rsp_demux_001_src1_ready),                                   //     sink0.ready
		.sink0_valid         (rsp_demux_001_src1_valid),                                   //          .valid
		.sink0_channel       (rsp_demux_001_src1_channel),                                 //          .channel
		.sink0_data          (rsp_demux_001_src1_data),                                    //          .data
		.sink0_startofpacket (rsp_demux_001_src1_startofpacket),                           //          .startofpacket
		.sink0_endofpacket   (rsp_demux_001_src1_endofpacket)                              //          .endofpacket
	);

endmodule
